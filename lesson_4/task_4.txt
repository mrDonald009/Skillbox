Задача 
Цель домашнего задания
Закрепить знания по темам:
•	Выполнение запросов с сортировкой.
•	Функции для работы со строками: использование в вычисляемых колонках и условиях. 
Все задания обязательны для выполнения.

Задание 1
В базе данных, которая расположена в тестовой среде - https://dbfiddle.uk/mfjLX9GX?hide=1, размещены две таблицы:

1.	Таблица skill_countries (информация по странам) с полями:

Наименование поля	Тип	Пояснение
country_id	целое число	идентификатор страны
country_name	строка	наименование страны
population	целое число	численность населения
percent_of_world_pop	дробное число	процент от мирового населения
continent_id	целое число	идентификатор континента, на котором находится страна

2.	Таблица skill_cities (информация по городам) с полями:

Наименование поля	Тип	Пояснение
city_id	целое число	идентификатор города
city_name	строка	наименование города
country_id	целое число	идентификатор страны, в которой находится город
population	целое число	численность населения
is_capital	целое число	содержит 1, если город является столицей, в противном случае содержит 0

Напишите SQL-запросы, получающие все колонки и строки со следующими данными:
1.	По странам, отсортированным в порядке возрастания численности населения.
2.	По странам, отсортированным в порядке убывания численности населения.
3.	По странам, отсортированным по континентам, а в каждом континенте — в порядке убывания численности населения.
4.	По городам, отсортированным по странам, а в каждой стране — в порядке убывания численности населения. Перечислите country_id стран, в которых столица не является самым населённым городом страны.
5.	Доработайте запрос задания 4 так, чтобы города оставались отсортированными по странам, но столицы стран были первыми, несмотря на численность населения. В остальном города должны идти в порядке уменьшения численности населения.

Задание 2
В базе данных Microsoft SQL Server, которая расположена в тестовой среде - https://dbfiddle.uk/mfjLX9GX?hide=1, размещены две таблицы:
1.	Таблица skill_countries (информация по странам) с полями:

Наименование поля	Тип	Пояснение
country_id	целое число	идентификатор страны
country_name	строка	наименование страны
population	целое число	численность населения
percent_of_world_pop	дробное число	процент от мирового населения
continent_id	целое число	идентификатор континента, на котором находится страна

2.	Таблица skill_cities (информация по городам) с полями:

Наименование поля	Тип	Пояснение
city_id	целое число	идентификатор города
city_name	строка	наименование города
country_id	целое число	идентификатор страны, в которой находится город
population	целое число	численность населения
is_capital	целое число	содержит 1, если город является столицей, в противном случае содержит 0

Напишите SQL-запросы, которые выводят следующие данные:
1.	По городу с самым большим населением.
2.	По городу с самым маленьким населением.
3.	По самому малонаселённому городу страны с идентификатором country_id=10.
4.	По самому населённому городу страны с идентификатором country_id=4.
5.	Список всех столиц, упорядочив вывод по убыванию населения.


Задание 3
В базе данных MySQL, расположенной в тестовой среде - https://dbfiddle.uk/gwKA0HT5?hide=1, размещена таблица skill_customers. При импорте данных в полях first_name и last_name в некоторых строках появились лишние пробелы: в начале, в конце поля или там, и там одновременно.
Напишите и выполните в тестовой среде SQL-запросы, которые получают из таблицы skill_customers:
1.	Следующие колонки:

Порядок колонки	Выводимое значение	Имя колонки
1	first_name	first_name
2	длина значения поля first_name	len_first_name
3	Значение first_name без концевых пробелов	trim_first_name
4	Длина значения поля first_name без концевых пробелов 	len_trim_first_name

2.	Строки, у которых значения колонки first_name не содержат концевых пробелов. Для составления условия отбора используйте функции расчёта длины строки и удаления концевых пробелов. 
3.	Строки, у которых значения колонки first_name не содержат концевых пробелов. Для составления условия отбора используйте функции сравнения строк like или аналоги. 
В базе данных Microsoft SQL Server 2016, которая расположена в тестовой среде - https://dbfiddle.uk/FUCtlqfY?hide=1, размещена таблица skill_customers. При импорте данных в полях first_name и last_name в некоторых строках появились лишние пробелы: в начале, в конце поля или там, и там одновременно.
4.	Напишите и выполните в тестовой среде SQL-запрос, который получает из таблицы skill_customers следующие колонки:

Порядок колонки	Выводимое значение	Имя колонки
1	Очищенное от начальных и конечных пробелов значение колонки first_name	first_name
2	Очищенное от начальных и конечных пробелов значение колонки last_name	last_name


Задание 4

В базе данных, которая расположена в тестовой среде, размещены таблицы skill_price и skill_fix.
1.	Напишите и выполните в тестовой среде SQL-запрос, который получает из таблицы skill_price все строки. Скорректируйте поле item_name — первая буква должна быть заглавной, остальные — строчными. Название поля должно остаться item_name.
2.	Напишите и выполните в тестовой среде SQL-запрос, который получает из таблицы skill_fix все строки. В выборку надо включить колонку str_columns и рассчитать колонки id, first_name, last_name, age, gender, которые получаются выделением соответствующей части из значения колонки str_columns. Все вычисляемые колонки должны быть без концевых пробелов и иметь соответствующее название. 
3.	Доработайте запрос из пункта 2 — добавьте условия выбора так, чтобы исключить из результирующей таблицы строку, в которой в колонке age присутствует запятая.
4.	Доработайте запрос из пункта 2 — добавьте в расчёт колонки age действия, которые убирают запятые из значений. Для этого рекомендуем воспользоваться функцией replace, она описана в дополнительных материалах к Модулю 4.

Задание 5

Подготовлены три среды для разных БД: MS SQL, MySQL и PostgreSQL. В каждой среде напишите и выполните SQL-запросы к таблице skill_customers:
1.	Запрос, получающий строки по условию: колонка last_name содержит подстроку '[wrong]';
2.	Выполните запрос с условием из пункта 1, в выборку включите одну рассчитываемую колонку, которая содержит значение поля last_name без подстроки '[wrong]'. Название колонки сохраняется — last_name. Для вычислений используйте функцию substring. Значения колонки не должны содержать концевых пробелов.
3.	Повторите запрос из пункта 2, но для вычислений используйте функцию replace. 

Дополнительные рекомендации по выполнению
Используйте справочный материал по всем функциям для работы со строками, он прикреплён к домашнему заданию.

Общие советы и рекомендации
•	Можно выполнять несколько запросов в разных полях одной сессии тестовой среды.
•	В выборку по каждому запросу включите все столбцы, если не сказано иное.
•	В некоторых заданиях необходимо дать дополнительный ответ, который формулируется на основе данных, полученных в результате запроса.
•	Необходимо пользоваться ссылкой на среду, данной для каждого задания — они различаются настроенной базой данных, для которой сформулировано задание. 

Как отправить задание на проверку
Ответ к каждому заданию должен содержать тексты SQL-запросов и скриншот с результатами выполнения запросов в тестовой среде.

